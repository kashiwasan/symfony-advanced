# sfadvanced rules
homepage:
  url:   /
  param: { module: member, action: home }

obj_member_profile:
  url:     /member/:id
  class:   saDynamicAclRoute
  options: { model: Member, type: object, privilege: view }
  param:   { module: member, action: profile }
  requirements:
    id:        \d+
    sf_method: [get]

member_profile_mine:
  url:     /member/profile
  param:   { module: member, action: profile }

member_index:
  url:   /member
  param: { module: member, action: home }

login:
  url: /member/login/*
  param: { module: member, action: login }

error:
  url: /default/error
  param: { module: default, action: error }

global_search:
  url: /search
  param: { module: default, action: search }

global_changeLanguage:
  url: /language
  param: { module: member, action: changeLanguage }

global_privacy_policy:
  url: /privacyPolicy
  param: { module: default, action: privacyPolicy }

global_user_agreement:
  url: /userAgreement
  param: { module: default, action: userAgreement }

# member rules
member_config_image:
  url: /member/image/config
  param: { module: member, action: configImage }

member_config_jsonapi:
  url: /member/config/jsonapi
  param: { module: member, action: configJsonApi }

member_config:
  url: /member/config
  param: { module: member, action: config }

member_delete:
  url: /leave
  param: { module: member, action: delete }

member_invite:
  url: /invite
  param: { module: member, action: invite }

member_search:
  url: /member/search
  param: { module: member, action: search }

member_editProfile:
  url: /member/edit/profile
  param: { module: member, action: editProfile }

member_logout:
  url: /logout
  param: { module: member, action: logout }

# friend rules
friend_show_image:
  url: /friend/image
  param: { module: friend, action: showImage }

# for BC
member_profile:
  url:   /member/:id
  class:   saDynamicAclRoute
  options: { model: Member, type: object, privilege: view }
  param:   { module: member, action: profile }
  requirements:
    id:        \d+
    sf_method: [get]

member_profile_raw:
  url:     /member/profile/id/:id/*
  class:   saDynamicAclRoute
  options: { model: Member, type: object, privilege: view }
  param:   { module: member, action: profile }
  requirements:
    id:        \d+
    sf_method: [get]

member_profile_no_default:
  url: /member/profile/*
  param: { module: default, action: error }

privacy_policy:
  url:  /default/privacyPolicy
  param: { module: default, action: privacyPolicy }

user_agreement:
  url:  /default/userAgreement
  param: { module: default, action: userAgreement }

no_default:
  url: /default/*
  param: { module: default, action: error }

